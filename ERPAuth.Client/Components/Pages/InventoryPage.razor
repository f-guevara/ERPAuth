@page "/add-inventory"
@inject InventoryService InventoryService
@inject ArticleService ArticleService
@inject ProviderService ProviderService

@using ERPAuth.Client.Models
@using System.Collections.Generic
@using System.Threading.Tasks

<h3>Add Inventory</h3>

<EditForm Model="newInventory" OnValidSubmit="HandleAddInventory">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Article Dropdown -->
    <div>
        <label for="articleId">Article</label>
        <select id="articleId" @bind="newInventory.ArticleId" class="form-control">
            <option value="">Select an article</option>
            @foreach (var article in articles)
            {
                <option value="@article.Id">@article.Name (@article.CompanyCode)</option>
            }
        </select>
    </div>

    <!-- Provider Dropdown -->
    <div>
        <label for="providerId">Provider</label>
        <select id="providerId" @bind="newInventory.ProviderId" class="form-control">
            <option value="">Select a provider</option>
            @foreach (var provider in providers)
            {
                <option value="@provider.Id">@provider.Name</option>
            }
        </select>
    </div>

    <div>
        <label for="providerCode">Provider Code</label>
        <InputText id="providerCode" @bind-Value="newInventory.ProviderCode" />
    </div>

    <div>
        <label for="lotNumber">Lot Number</label>
        <InputText id="lotNumber" @bind-Value="newInventory.LotNumber" />
    </div>

    <div>
        <label for="totalQuantity">Total Quantity</label>
        <InputNumber id="totalQuantity" @bind-Value="newInventory.TotalQuantity" />
    </div>

    <div>
        <label for="location">Location</label>
        <InputText id="location" @bind-Value="newInventory.Location" />
    </div>

    <div>
        <label for="expirationDate">Expiration Date</label>
        <InputDate id="expirationDate" @bind-Value="newInventory.ExpirationDate" />
    </div>

    <div>
        <label for="cost">Cost (optional)</label>
        <InputNumber id="cost" @bind-Value="newInventory.Cost" />
    </div>

    <button type="submit">Add Inventory</button>
</EditForm>

@if (errorMessage != null)
{
    <p style="color: red;">Error: @errorMessage</p>
}

@code {
    private Inventory newInventory = new Inventory();
    private List<Article> articles = new(); // List of articles
    private List<Provider> providers = new(); // List of providers
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Load providers and articles
            providers = await ProviderService.GetAllProvidersAsync();
            articles = await ArticleService.GetAllArticlesAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load data: {ex.Message}";
        }
    }

    private async Task HandleAddInventory()
    {
        try
        {
            await InventoryService.AddInventoryEntryAsync(newInventory);
            newInventory = new Inventory(); // Reset form
            errorMessage = null; // Clear error
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to add inventory: {ex.Message}";
        }
    }
}
