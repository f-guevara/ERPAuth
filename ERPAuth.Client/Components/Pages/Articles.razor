@page "/articles"
@inject ArticleService ArticleService
@inject NavigationManager NavigationManager
@using ERPAuth.Client.Models
@using System.Collections.Generic
@using System.Threading.Tasks

<h3>Manage Articles</h3>

@if (articles == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var article in articles)
        {
            <li>
                <strong>@article.CompanyCode</strong> - @article.Name - @article.Type - Price: @article.Price
                <button @onclick="() => NavigateToInventory(article.Id)">Manage Inventory</button>
            </li>
        }
    </ul>
}

<button @onclick="ShowAddArticleForm">Add New Article</button>

@if (showAddArticleForm)
{
    <EditForm Model="newArticle" OnValidSubmit="HandleAddArticle">
        <label>Company Code: <InputText @bind-Value="newArticle.CompanyCode" /></label>
        <label>Name: <InputText @bind-Value="newArticle.Name" /></label>
        <label>
            Type: <InputSelect @bind-Value="newArticle.Type">
                @foreach (var type in Enum.GetValues<ArticleType>())
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </label>
        <label>Price: <InputNumber @bind-Value="newArticle.Price" /></label>
        <button type="submit">Save Article</button>
    </EditForm>
}

@code {
    private List<Article> articles;
    private bool showAddArticleForm;
    private Article newArticle = new();

    protected override async Task OnInitializedAsync()
    {
        articles = await ArticleService.GetAllArticlesAsync();
    }

    private void ShowAddArticleForm()
    {
        showAddArticleForm = true;
    }

    private async Task HandleAddArticle()
    {
        try
        {
            await ArticleService.AddArticleAsync(newArticle);
            articles = await ArticleService.GetAllArticlesAsync(); // Refresh list
            showAddArticleForm = false;
            newArticle = new Article(); // Reset form
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error adding article: {ex.Message}");
        }
    }

    private void NavigateToInventory(int articleId)
    {
        // Assuming there's a method to navigate to the Inventory page with an articleId as a parameter
        NavigationManager.NavigateTo($"/inventory/{articleId}");
    }
}
